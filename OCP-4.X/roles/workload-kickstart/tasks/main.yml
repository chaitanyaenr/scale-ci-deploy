---
#
# Populates the workload node with kubeconfig and ssh configuration for easier debugging
#

- name: ensure that .kube dir exists on workload node
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - /home/core/.kube
    - /root/.kube

- name: copy the kubeconfig to workload node
  copy:
    src: "{{playbook_dir}}/kubeconfig"
    dest: "{{ item }}"
  with_items:
    - /home/core/.kube/config
    - /root/.kube/config
  when:
    - kubeconfig_auth_dir_path is undefined

# handle case where kubeconfig is in another specified dir
- name: copy the kubeconfig to workload node from specific directory
  copy:
    src: "{{ kubeconfig_auth_dir_path }}/auth/kubeconfig"
    dest: "{{ item }}"
  with_items:
    - /home/core/.kube/config
    - /root/.kube/config
  when:
    - kubeconfig_auth_dir_path is defined
    - kubeconfig_auth_dir_path != ""

- name: ensure that ssh dir exists
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - /home/core/.ssh
    - /root/.ssh

- name: copy authorized keys
  copy:
    src: /home/core/.ssh/authorized_keys
    dest: /root/.ssh/authorized_keys
    remote_src: yes
    owner: root
    group: root

- name: copy private key to workload host
  copy:
    src: "{{ansible_ssh_private_key_file}}"
    dest: "{{ item }}"
    mode: 0600
  with_items:
    - /home/core/.ssh/id_rsa
    - /root/.ssh/id_rsa

- name: copy ssh config
  copy:
    src: config
    dest: "{{ item }}"
    mode: 0600
  with_items:
    - /home/core/.ssh/config
    - /root/.ssh/config

- name: get nodes
  shell: oc get nodes | grep -v workload | awk 'NR>1 {print $1}'
  register: ocp_nodes

- name: add nodes to group
  add_host:
    name: "{{ item }}"
    groups: nodes
    ansible_ssh_common_args: |-
      -o ProxyCommand='ssh -i {{ansible_private_key_file}} -W %h:%p {{ openshift_install_user | default('core') }}@{{inventory_hostname}}'
  with_items:
    - "{{ ocp_nodes.stdout_lines }}"
